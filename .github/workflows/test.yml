name: Test Suite

on:
  push:
    branches: [ master, main, develop ]
  pull_request:
    branches: [ master, main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ['3.12', '3.13']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e ".[dev]"

    - name: Verify installation
      run: |
        python -c "import sys; print(f'Python: {sys.version}')"
        python -c "from qa_testing.compliance import AccuracyValidator; print('✓ Compliance module imports')"
        python -c "from qa_testing.models import Budget; print('✓ Models module imports')"
        python -m pytest --version

    - name: Run linting
      run: |
        ruff check src/ tests/
      continue-on-error: true

    - name: Run type checking
      run: |
        mypy src/ --ignore-missing-imports
      continue-on-error: true

    - name: Run compliance tests
      run: |
        python -m pytest tests/compliance/ -v --tb=short

    - name: Run bank reconciliation tests
      run: |
        python -m pytest tests/test_bank_reconciliation.py -v --tb=short

    - name: Run integration tests (no database fixtures)
      run: |
        python -m pytest tests/integration/test_budget_management.py tests/integration/test_dashboard_metrics.py tests/integration/test_funds_management.py -v --tb=short

    - name: Run property-based tests
      run: |
        python -m pytest tests/property/test_budget_invariants.py -v --tb=short

    - name: Generate coverage report
      run: |
        # Run coverage on our core test suite (excluding tests that need PostgreSQL)
        python -m pytest tests/compliance/ tests/test_bank_reconciliation.py tests/integration/test_budget_management.py tests/integration/test_dashboard_metrics.py tests/integration/test_funds_management.py tests/property/test_budget_invariants.py --cov=src/qa_testing --cov-report=term-missing --cov-report=xml
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
      continue-on-error: true

    - name: Test summary
      if: always()
      run: |
        echo "## Test Results" >> $GITHUB_STEP_SUMMARY
        echo "Python version: ${{ matrix.python-version }}" >> $GITHUB_STEP_SUMMARY
        echo "Tests completed!" >> $GITHUB_STEP_SUMMARY

  validate-data-types:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e ".[dev]"

    - name: Validate data type compliance
      run: |
        python -m pytest tests/ -k "test_.*_use_decimal" -v
        python -m pytest tests/ -k "test_.*_dates_use_date" -v
        python -m pytest tests/ -k "test_.*_decimal_with_2_places" -v
      continue-on-error: false

  compliance-tests:
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python 3.13
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install -e ".[dev]"

    - name: Run compliance verification tests
      run: |
        python -m pytest tests/compliance/ -v --tb=short
      continue-on-error: false
