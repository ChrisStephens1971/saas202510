{
  "permissions": {
    "allow": [
      "Bash(git clone:*)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Read(//c/kb/**)",
      "Bash(echo:*)",
      "Read(//c/Users/Chris Stephens/**)",
      "WebSearch",
      "Bash(powershell -File:*)",
      "Bash(powershell -Command \"& {.\\Check-DomainAvailability.ps1 -Domains @(''nailroute.com'',''glamroute.com'',''polishpath.com'',''naildash.com'',''nailflow.com'',''nailsync.com'',''booknails.com'',''manicurego.com'',''polishpro.com'',''techroute.com'',''glossygo.com'',''bufferbook.com'')}\")",
      "Bash(powershell -Command \"& {$config = Get-Content ''C:\\devop\\.config\\godaddy-api.json'' | ConvertFrom-Json; Write-Host ''API Key:'' $config.apiKey; Write-Host ''Base URL:'' $config.baseUrl}\")",
      "WebFetch(domain:whoapi.com)",
      "WebFetch(domain:who.is)",
      "Bash(find:*)",
      "Bash(python -m venv:*)",
      "Bash(.venvScriptspython.exe -m pip install --upgrade pip setuptools wheel)",
      "Bash(\".venv/Scripts/python.exe\" -m pip install --upgrade pip setuptools wheel)",
      "Bash(\".venv/Scripts/python.exe\" -m pip install -e \".[dev]\")",
      "Bash(\".venv/Scripts/pytest.exe\" --version)",
      "Bash(python -m json.tool:*)",
      "Bash(\".venv/Scripts/python.exe\" -c \"from qa_testing.models import *; print(''✅ All models imported successfully'')\")",
      "Bash(\".venv/Scripts/python.exe\" -m pip install \"pydantic[email]\")",
      "Bash(\".venv/Scripts/python.exe\" -c \"from qa_testing.models import *; print(''✅ All models imported successfully''); print(f''Models: Member, Property, Unit, Fund, Transaction, LedgerEntry'')\")",
      "Bash(\".venv/Scripts/python.exe\" -c \"from qa_testing.models import *; print(''All models imported successfully''); print(f''Models: Member, Property, Unit, Fund, Transaction, LedgerEntry'')\")",
      "Bash(\".venv/Scripts/python.exe\":*)",
      "Bash(\".venv/Scripts/python.exe\" test_generators.py)",
      "Bash(\".venv/Scripts/pytest.exe\" tests/property/test_accounting_invariants.py -v)",
      "Bash(\".venv/Scripts/pytest.exe\" tests/test_validators.py -v)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/integration/test_bank_reconciliation.py -v)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/integration/test_bank_reconciliation.py -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/integration/test_bank_reconciliation.py tests/property/test_tenant_isolation.py tests/integration/test_ar_collections.py -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest:*)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/integration/test_bank_reconciliation.py::TestBankSync::test_bank_sync_filters_by_date_range -v)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/integration/test_bank_reconciliation.py tests/property/test_tenant_isolation.py tests/integration/test_ar_collections.py -v --tb=no)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py -v)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py::TestMemberBalanceReconstruction::test_reconstruct_member_with_no_transactions -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" fix_pit_tests.py)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py -v --tb=no)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py::TestTransactionSummary::test_get_transaction_summary_empty -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py -v --tb=no -x)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/test_point_in_time_reconstruction.py::TestFundBalanceReconstruction::test_reconstruct_fund_with_credit_entry -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" fix_ledger_entries.py)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/compliance/test_audit_trail.py -v)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/compliance/test_audit_trail.py -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/compliance/test_immutability.py -v --tb=short)",
      "Bash(\".venv/Scripts/python.exe\" -m pytest tests/compliance/ -v --tb=short)"
    ],
    "deny": [],
    "ask": []
  }
}
